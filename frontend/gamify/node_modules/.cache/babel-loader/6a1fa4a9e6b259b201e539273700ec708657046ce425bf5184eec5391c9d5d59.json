{"ast":null,"code":"// Simple localStorage-backed storage for demo purposes\nconst STORAGE_KEYS = {\n  users: 'glp_users',\n  currentUser: 'glp_current_user',\n  classes: 'glp_classes'\n};\nexport const getJson = (key, fallback) => {\n  try {\n    const raw = localStorage.getItem(key);\n    return raw ? JSON.parse(raw) : fallback;\n  } catch (e) {\n    return fallback;\n  }\n};\nexport const setJson = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\nexport const bootstrapDefaults = () => {\n  const users = getJson(STORAGE_KEYS.users, []);\n  if (!users.length) {\n    setJson(STORAGE_KEYS.users, [{\n      id: 'u1',\n      role: 'admin',\n      name: 'Principal',\n      email: 'admin@school.com',\n      password: 'admin123',\n      verified: true\n    }, {\n      id: 'u2',\n      role: 'teacher',\n      name: 'Ms. Smith',\n      email: 'teacher@school.com',\n      password: 'teacher123',\n      verified: true\n    }, {\n      id: 'u3',\n      role: 'student',\n      name: 'Alex',\n      email: 'student@school.com',\n      password: 'student123',\n      verified: true\n    }]);\n  }\n  const classes = getJson(STORAGE_KEYS.classes, []);\n  if (!classes.length) {\n    setJson(STORAGE_KEYS.classes, [{\n      id: 'c1',\n      name: 'Grade 8 - Math',\n      subject: 'Math',\n      teacherId: 'u2',\n      studentIds: ['u3']\n    }]);\n  }\n};\nexport const authApi = {\n  login(email, password) {\n    var _email$trim;\n    const users = getJson(STORAGE_KEYS.users, []);\n    // Allow shortcuts like \"student\" or \"stu\" to login demo users quickly\n    const aliasMap = {\n      student: 'student@school.com',\n      stu: 'student@school.com',\n      teacher: 'teacher@school.com',\n      tea: 'teacher@school.com',\n      admin: 'admin@school.com'\n    };\n    const normalizedEmail = aliasMap[email === null || email === void 0 ? void 0 : (_email$trim = email.trim()) === null || _email$trim === void 0 ? void 0 : _email$trim.toLowerCase()] || email;\n    const user = users.find(u => {\n      var _u$name;\n      return (u.email === normalizedEmail || ((_u$name = u.name) === null || _u$name === void 0 ? void 0 : _u$name.toLowerCase()) === (normalizedEmail === null || normalizedEmail === void 0 ? void 0 : normalizedEmail.toLowerCase())) && u.password === password;\n    });\n    if (user && user.verified !== false) {\n      setJson(STORAGE_KEYS.currentUser, user);\n      return user;\n    }\n    return null;\n  },\n  logout() {\n    localStorage.removeItem(STORAGE_KEYS.currentUser);\n  },\n  current() {\n    return getJson(STORAGE_KEYS.currentUser, null);\n  }\n};\nexport const userApi = {\n  all() {\n    return getJson(STORAGE_KEYS.users, []);\n  },\n  saveAll(users) {\n    setJson(STORAGE_KEYS.users, users);\n  },\n  add(user) {\n    const users = getJson(STORAGE_KEYS.users, []);\n    users.push(user);\n    setJson(STORAGE_KEYS.users, users);\n    return user;\n  },\n  verify(userId, verified = true) {\n    const users = getJson(STORAGE_KEYS.users, []);\n    const idx = users.findIndex(u => u.id === userId);\n    if (idx >= 0) {\n      users[idx].verified = verified;\n      setJson(STORAGE_KEYS.users, users);\n    }\n  }\n};\nexport const classApi = {\n  all() {\n    return getJson(STORAGE_KEYS.classes, []);\n  },\n  saveAll(classes) {\n    setJson(STORAGE_KEYS.classes, classes);\n  },\n  create(klass) {\n    const classes = getJson(STORAGE_KEYS.classes, []);\n    classes.push(klass);\n    setJson(STORAGE_KEYS.classes, classes);\n    return klass;\n  },\n  assignTeacher(classId, teacherId) {\n    const classes = getJson(STORAGE_KEYS.classes, []);\n    const idx = classes.findIndex(c => c.id === classId);\n    if (idx >= 0) {\n      classes[idx].teacherId = teacherId;\n      setJson(STORAGE_KEYS.classes, classes);\n    }\n  },\n  addStudent(classId, studentId) {\n    const classes = getJson(STORAGE_KEYS.classes, []);\n    const idx = classes.findIndex(c => c.id === classId);\n    if (idx >= 0) {\n      const set = new Set(classes[idx].studentIds || []);\n      set.add(studentId);\n      classes[idx].studentIds = Array.from(set);\n      setJson(STORAGE_KEYS.classes, classes);\n    }\n  }\n};\nexport default {\n  STORAGE_KEYS,\n  getJson,\n  setJson,\n  bootstrapDefaults,\n  authApi,\n  userApi,\n  classApi\n};","map":{"version":3,"names":["STORAGE_KEYS","users","currentUser","classes","getJson","key","fallback","raw","localStorage","getItem","JSON","parse","e","setJson","value","setItem","stringify","bootstrapDefaults","length","id","role","name","email","password","verified","subject","teacherId","studentIds","authApi","login","_email$trim","aliasMap","student","stu","teacher","tea","admin","normalizedEmail","trim","toLowerCase","user","find","u","_u$name","logout","removeItem","current","userApi","all","saveAll","add","push","verify","userId","idx","findIndex","classApi","create","klass","assignTeacher","classId","c","addStudent","studentId","set","Set","Array","from"],"sources":["D:/gamify/src/components/utils/storage.js"],"sourcesContent":["// Simple localStorage-backed storage for demo purposes\r\nconst STORAGE_KEYS = {\r\n  users: 'glp_users',\r\n  currentUser: 'glp_current_user',\r\n  classes: 'glp_classes'\r\n};\r\n\r\nexport const getJson = (key, fallback) => {\r\n  try {\r\n    const raw = localStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : fallback;\r\n  } catch (e) {\r\n    return fallback;\r\n  }\r\n};\r\n\r\nexport const setJson = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nexport const bootstrapDefaults = () => {\r\n  const users = getJson(STORAGE_KEYS.users, []);\r\n  if (!users.length) {\r\n    setJson(STORAGE_KEYS.users, [\r\n      { id: 'u1', role: 'admin', name: 'Principal', email: 'admin@school.com', password: 'admin123', verified: true },\r\n      { id: 'u2', role: 'teacher', name: 'Ms. Smith', email: 'teacher@school.com', password: 'teacher123', verified: true },\r\n      { id: 'u3', role: 'student', name: 'Alex', email: 'student@school.com', password: 'student123', verified: true }\r\n    ]);\r\n  }\r\n  const classes = getJson(STORAGE_KEYS.classes, []);\r\n  if (!classes.length) {\r\n    setJson(STORAGE_KEYS.classes, [\r\n      { id: 'c1', name: 'Grade 8 - Math', subject: 'Math', teacherId: 'u2', studentIds: ['u3'] }\r\n    ]);\r\n  }\r\n};\r\n\r\nexport const authApi = {\r\n  login(email, password) {\r\n    const users = getJson(STORAGE_KEYS.users, []);\r\n    // Allow shortcuts like \"student\" or \"stu\" to login demo users quickly\r\n    const aliasMap = {\r\n      student: 'student@school.com',\r\n      stu: 'student@school.com',\r\n      teacher: 'teacher@school.com',\r\n      tea: 'teacher@school.com',\r\n      admin: 'admin@school.com'\r\n    };\r\n    const normalizedEmail = aliasMap[email?.trim()?.toLowerCase()] || email;\r\n    const user = users.find(u => (u.email === normalizedEmail || u.name?.toLowerCase() === normalizedEmail?.toLowerCase()) && u.password === password);\r\n    if (user && user.verified !== false) {\r\n      setJson(STORAGE_KEYS.currentUser, user);\r\n      return user;\r\n    }\r\n    return null;\r\n  },\r\n  logout() { localStorage.removeItem(STORAGE_KEYS.currentUser); },\r\n  current() { return getJson(STORAGE_KEYS.currentUser, null); }\r\n};\r\n\r\nexport const userApi = {\r\n  all() { return getJson(STORAGE_KEYS.users, []); },\r\n  saveAll(users) { setJson(STORAGE_KEYS.users, users); },\r\n  add(user) {\r\n    const users = getJson(STORAGE_KEYS.users, []);\r\n    users.push(user);\r\n    setJson(STORAGE_KEYS.users, users);\r\n    return user;\r\n  },\r\n  verify(userId, verified = true) {\r\n    const users = getJson(STORAGE_KEYS.users, []);\r\n    const idx = users.findIndex(u => u.id === userId);\r\n    if (idx >= 0) { users[idx].verified = verified; setJson(STORAGE_KEYS.users, users); }\r\n  }\r\n};\r\n\r\nexport const classApi = {\r\n  all() { return getJson(STORAGE_KEYS.classes, []); },\r\n  saveAll(classes) { setJson(STORAGE_KEYS.classes, classes); },\r\n  create(klass) {\r\n    const classes = getJson(STORAGE_KEYS.classes, []);\r\n    classes.push(klass);\r\n    setJson(STORAGE_KEYS.classes, classes);\r\n    return klass;\r\n  },\r\n  assignTeacher(classId, teacherId) {\r\n    const classes = getJson(STORAGE_KEYS.classes, []);\r\n    const idx = classes.findIndex(c => c.id === classId);\r\n    if (idx >= 0) { classes[idx].teacherId = teacherId; setJson(STORAGE_KEYS.classes, classes); }\r\n  },\r\n  addStudent(classId, studentId) {\r\n    const classes = getJson(STORAGE_KEYS.classes, []);\r\n    const idx = classes.findIndex(c => c.id === classId);\r\n    if (idx >= 0) {\r\n      const set = new Set(classes[idx].studentIds || []);\r\n      set.add(studentId);\r\n      classes[idx].studentIds = Array.from(set);\r\n      setJson(STORAGE_KEYS.classes, classes);\r\n    }\r\n  }\r\n};\r\n\r\nexport default { STORAGE_KEYS, getJson, setJson, bootstrapDefaults, authApi, userApi, classApi };\r\n\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,WAAW;EAClBC,WAAW,EAAE,kBAAkB;EAC/BC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;EACxC,IAAI;IACF,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC;IACrC,OAAOE,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAGD,QAAQ;EACzC,CAAC,CAAC,OAAOM,CAAC,EAAE;IACV,OAAON,QAAQ;EACjB;AACF,CAAC;AAED,OAAO,MAAMO,OAAO,GAAGA,CAACR,GAAG,EAAES,KAAK,KAAK;EACrCN,YAAY,CAACO,OAAO,CAACV,GAAG,EAAEK,IAAI,CAACM,SAAS,CAACF,KAAK,CAAC,CAAC;AAClD,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;EACrC,MAAMhB,KAAK,GAAGG,OAAO,CAACJ,YAAY,CAACC,KAAK,EAAE,EAAE,CAAC;EAC7C,IAAI,CAACA,KAAK,CAACiB,MAAM,EAAE;IACjBL,OAAO,CAACb,YAAY,CAACC,KAAK,EAAE,CAC1B;MAAEkB,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,kBAAkB;MAAEC,QAAQ,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAK,CAAC,EAC/G;MAAEL,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,oBAAoB;MAAEC,QAAQ,EAAE,YAAY;MAAEC,QAAQ,EAAE;IAAK,CAAC,EACrH;MAAEL,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,oBAAoB;MAAEC,QAAQ,EAAE,YAAY;MAAEC,QAAQ,EAAE;IAAK,CAAC,CACjH,CAAC;EACJ;EACA,MAAMrB,OAAO,GAAGC,OAAO,CAACJ,YAAY,CAACG,OAAO,EAAE,EAAE,CAAC;EACjD,IAAI,CAACA,OAAO,CAACe,MAAM,EAAE;IACnBL,OAAO,CAACb,YAAY,CAACG,OAAO,EAAE,CAC5B;MAAEgB,EAAE,EAAE,IAAI;MAAEE,IAAI,EAAE,gBAAgB;MAAEI,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,IAAI;MAAEC,UAAU,EAAE,CAAC,IAAI;IAAE,CAAC,CAC3F,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG;EACrBC,KAAKA,CAACP,KAAK,EAAEC,QAAQ,EAAE;IAAA,IAAAO,WAAA;IACrB,MAAM7B,KAAK,GAAGG,OAAO,CAACJ,YAAY,CAACC,KAAK,EAAE,EAAE,CAAC;IAC7C;IACA,MAAM8B,QAAQ,GAAG;MACfC,OAAO,EAAE,oBAAoB;MAC7BC,GAAG,EAAE,oBAAoB;MACzBC,OAAO,EAAE,oBAAoB;MAC7BC,GAAG,EAAE,oBAAoB;MACzBC,KAAK,EAAE;IACT,CAAC;IACD,MAAMC,eAAe,GAAGN,QAAQ,CAACT,KAAK,aAALA,KAAK,wBAAAQ,WAAA,GAALR,KAAK,CAAEgB,IAAI,CAAC,CAAC,cAAAR,WAAA,uBAAbA,WAAA,CAAeS,WAAW,CAAC,CAAC,CAAC,IAAIjB,KAAK;IACvE,MAAMkB,IAAI,GAAGvC,KAAK,CAACwC,IAAI,CAACC,CAAC;MAAA,IAAAC,OAAA;MAAA,OAAI,CAACD,CAAC,CAACpB,KAAK,KAAKe,eAAe,IAAI,EAAAM,OAAA,GAAAD,CAAC,CAACrB,IAAI,cAAAsB,OAAA,uBAANA,OAAA,CAAQJ,WAAW,CAAC,CAAC,OAAKF,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEE,WAAW,CAAC,CAAC,MAAKG,CAAC,CAACnB,QAAQ,KAAKA,QAAQ;IAAA,EAAC;IAClJ,IAAIiB,IAAI,IAAIA,IAAI,CAAChB,QAAQ,KAAK,KAAK,EAAE;MACnCX,OAAO,CAACb,YAAY,CAACE,WAAW,EAAEsC,IAAI,CAAC;MACvC,OAAOA,IAAI;IACb;IACA,OAAO,IAAI;EACb,CAAC;EACDI,MAAMA,CAAA,EAAG;IAAEpC,YAAY,CAACqC,UAAU,CAAC7C,YAAY,CAACE,WAAW,CAAC;EAAE,CAAC;EAC/D4C,OAAOA,CAAA,EAAG;IAAE,OAAO1C,OAAO,CAACJ,YAAY,CAACE,WAAW,EAAE,IAAI,CAAC;EAAE;AAC9D,CAAC;AAED,OAAO,MAAM6C,OAAO,GAAG;EACrBC,GAAGA,CAAA,EAAG;IAAE,OAAO5C,OAAO,CAACJ,YAAY,CAACC,KAAK,EAAE,EAAE,CAAC;EAAE,CAAC;EACjDgD,OAAOA,CAAChD,KAAK,EAAE;IAAEY,OAAO,CAACb,YAAY,CAACC,KAAK,EAAEA,KAAK,CAAC;EAAE,CAAC;EACtDiD,GAAGA,CAACV,IAAI,EAAE;IACR,MAAMvC,KAAK,GAAGG,OAAO,CAACJ,YAAY,CAACC,KAAK,EAAE,EAAE,CAAC;IAC7CA,KAAK,CAACkD,IAAI,CAACX,IAAI,CAAC;IAChB3B,OAAO,CAACb,YAAY,CAACC,KAAK,EAAEA,KAAK,CAAC;IAClC,OAAOuC,IAAI;EACb,CAAC;EACDY,MAAMA,CAACC,MAAM,EAAE7B,QAAQ,GAAG,IAAI,EAAE;IAC9B,MAAMvB,KAAK,GAAGG,OAAO,CAACJ,YAAY,CAACC,KAAK,EAAE,EAAE,CAAC;IAC7C,MAAMqD,GAAG,GAAGrD,KAAK,CAACsD,SAAS,CAACb,CAAC,IAAIA,CAAC,CAACvB,EAAE,KAAKkC,MAAM,CAAC;IACjD,IAAIC,GAAG,IAAI,CAAC,EAAE;MAAErD,KAAK,CAACqD,GAAG,CAAC,CAAC9B,QAAQ,GAAGA,QAAQ;MAAEX,OAAO,CAACb,YAAY,CAACC,KAAK,EAAEA,KAAK,CAAC;IAAE;EACtF;AACF,CAAC;AAED,OAAO,MAAMuD,QAAQ,GAAG;EACtBR,GAAGA,CAAA,EAAG;IAAE,OAAO5C,OAAO,CAACJ,YAAY,CAACG,OAAO,EAAE,EAAE,CAAC;EAAE,CAAC;EACnD8C,OAAOA,CAAC9C,OAAO,EAAE;IAAEU,OAAO,CAACb,YAAY,CAACG,OAAO,EAAEA,OAAO,CAAC;EAAE,CAAC;EAC5DsD,MAAMA,CAACC,KAAK,EAAE;IACZ,MAAMvD,OAAO,GAAGC,OAAO,CAACJ,YAAY,CAACG,OAAO,EAAE,EAAE,CAAC;IACjDA,OAAO,CAACgD,IAAI,CAACO,KAAK,CAAC;IACnB7C,OAAO,CAACb,YAAY,CAACG,OAAO,EAAEA,OAAO,CAAC;IACtC,OAAOuD,KAAK;EACd,CAAC;EACDC,aAAaA,CAACC,OAAO,EAAElC,SAAS,EAAE;IAChC,MAAMvB,OAAO,GAAGC,OAAO,CAACJ,YAAY,CAACG,OAAO,EAAE,EAAE,CAAC;IACjD,MAAMmD,GAAG,GAAGnD,OAAO,CAACoD,SAAS,CAACM,CAAC,IAAIA,CAAC,CAAC1C,EAAE,KAAKyC,OAAO,CAAC;IACpD,IAAIN,GAAG,IAAI,CAAC,EAAE;MAAEnD,OAAO,CAACmD,GAAG,CAAC,CAAC5B,SAAS,GAAGA,SAAS;MAAEb,OAAO,CAACb,YAAY,CAACG,OAAO,EAAEA,OAAO,CAAC;IAAE;EAC9F,CAAC;EACD2D,UAAUA,CAACF,OAAO,EAAEG,SAAS,EAAE;IAC7B,MAAM5D,OAAO,GAAGC,OAAO,CAACJ,YAAY,CAACG,OAAO,EAAE,EAAE,CAAC;IACjD,MAAMmD,GAAG,GAAGnD,OAAO,CAACoD,SAAS,CAACM,CAAC,IAAIA,CAAC,CAAC1C,EAAE,KAAKyC,OAAO,CAAC;IACpD,IAAIN,GAAG,IAAI,CAAC,EAAE;MACZ,MAAMU,GAAG,GAAG,IAAIC,GAAG,CAAC9D,OAAO,CAACmD,GAAG,CAAC,CAAC3B,UAAU,IAAI,EAAE,CAAC;MAClDqC,GAAG,CAACd,GAAG,CAACa,SAAS,CAAC;MAClB5D,OAAO,CAACmD,GAAG,CAAC,CAAC3B,UAAU,GAAGuC,KAAK,CAACC,IAAI,CAACH,GAAG,CAAC;MACzCnD,OAAO,CAACb,YAAY,CAACG,OAAO,EAAEA,OAAO,CAAC;IACxC;EACF;AACF,CAAC;AAED,eAAe;EAAEH,YAAY;EAAEI,OAAO;EAAES,OAAO;EAAEI,iBAAiB;EAAEW,OAAO;EAAEmB,OAAO;EAAES;AAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}